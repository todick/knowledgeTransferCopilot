Wie war das denn? Die Funktionalität, die ich testen wollte, die war in dbpy, und zwar das mit dem string getEntryView. Und es wäre natürlich nett, wenn man hier jetzt gar nicht mit der Datenbank interagieren müsste. Vielleicht ist das auch der Grund, warum da keine Session übergeben wurde vorher. Aber gleichzeitig hatte ich keinen Weg gesehen, wie man die ganzen Entries von dem User bekommt, ohne die Session zu fragen. Vielleicht kriegen wir das ja doch nochmal hin. Entries gleich CurrentUser.Entries. Vielleicht geht das sogar. Dann, wenn das geht, wäre das natürlich nett und dann könnte man die Funktion auch einfacher testen. Probieren wir es also aus. Aha, das nenne ich mal Magie. Also übergeben wir keine Session mehr und gehen auch zu dem Aufruf und übergeben da auch keine Session mehr. Bei den anderen Funktionen, wo ich das hinzugefügt habe, ist das wahrscheinlich kein großes Ding. Testen wollte ich ja eigentlich nur diese Funktion. Dann will ich jetzt also ein Tutorial für PyTest und nicht für PyTest mit SQL. Wir haben PyTest importiert und nehmen wir uns einfach mal diesen Code und packen den in eine neue Datei. Die Datei soll test.py heißen. Und die wollen wir auch ins Kit einchecken. Ja, alles gut. Wenn ich jetzt irgendwas drücke, um Tests auszuführen. Ah, ich kann gleichzeitig auch einfach dieses Ding drücken. Das scheint geklappt zu haben. Kann ich hier jetzt meine Funktion importieren. Import db. Kann ich from db import. Wie hieß die Funktion, die ich testen wollte? GetEntryView. Dann will ich jetzt also einen Test für diese Funktion schreiben. Vielleicht kann das mein Copilot. TestGetEntryView. Yes. Es wirkt mir so, als hätte Copilot hier jetzt nicht verstanden, was die Funktion macht. Vielleicht, weil es in einer anderen Datei ist. Deswegen würde ich die Funktion einfach mal testweise kurz in die andere Datei rüber kopieren. Vielleicht versteht Copilot ja dann, wie man diese Funktion testet. Das sieht ganz so aus, als hätte es das mehr verstanden als vorher. Es ist natürlich schade, dass man das braucht, aber es ist ja auch ganz nett. Mehr verstanden als vorher ist wahr, aber ich bin nicht zufrieden mit diesen Completions hier. Also würde ich das einfach nochmal anders machen. Um zu testen, wollen wir einen Nutzer erstellen. Der Nutzer, der kommt aus der Datenbank. Ne, aus Models. Import UserEntry. Ja, das sah schon gut aus. Und dann sagen wir User gleich. Genau. Und dann sagen wir User.Entry ist gleich irgendwas. Das ist auch fast das, was wir wollten. Ich würde gerne testen mit dem Beispiel, was wir in dem Docomment oben haben. Das heißt, mal schauen, ob er das übernehmen kann. Mail. Info gleich. Nein, das hat er nicht übernommen, aber dann tippe ich es einfach nochmal ab. So. Dafür hat er das jetzt fast verstanden. Nur beim Kopieren hat er irgendwie keine Lust. Jetzt haben wir unseren User, können also die Funktion aufrufen. GetEntryView von unserem User. Und haben auch eigentlich gleich schon das, wogegen wir testen wollen. Das würde ich hier jetzt einfach mal rauskopieren, weil ich dem Copilot nicht traue, das richtig zu kopieren. Und haben jetzt gleich das Problem, dass wir hier ganz viele Spaces haben, die beim Testen eigentlich nerven. Aber das Problem würde ich jetzt gleich einfach mal sehen. Mal schauen, ob das überhaupt funktioniert. Ob es überhaupt testet. So. Wenn wir unseren Test ausführen, sehen wir, dass die Funktion noch die kopierte ist und die funktioniert so leider nicht. Die können wir also jetzt rauswerfen. Und dann scheint der Test grundsätzlich zu funktionieren. Aber unsere Formatierung ist halt noch falsch und die ganzen Spaces am Anfang wollen wir nicht. Wie soll es denn aussehen? Wir wollen zwei Spaces und dann die gepaddeten Dinger. Das heißt, ich nehme die Funktion jetzt und mache die Spaces da weg. Und dann haben wir hier auch noch eine Newline, die wahrscheinlich nicht drin ist. Dann habe ich hier auch noch eine Newline, die wahrscheinlich nicht drin ist. Probieren wir das jetzt mal aus. So, jetzt sagt uns unser Testing-See, dass die Strings nicht gleich sind. Und hier kann ich click to see difference. Das ist ja fancy. Also, was haben wir falsch gemacht? Wir haben unsere Info links aligned, das sollten wir rechts alignen. Die Newline war doch richtig und irgendwie ist der Rest auch noch falsch. Der Name sollte auch rechts aligned sein. Das Passwort vermutlich auch, wobei vielleicht sind das immer fünf Sternchen. Gleichzeitig sollte ich auch noch mal schauen, ob das Passwort... Ja, das Passwort sollte gleich sein, egal wie ich die Passwörter hier setze. Das heißt, hier machen wir mal ein kurzes und ein sehr langes, weil wer weiß, ob das aktuell einfach übernommen wird. Dann geht es also daran, die Funktionalität zu reparieren. Was ist denn aktuell falsch? Das mit den Sternchen für das Passwort scheint kein Problem gewesen zu sein, aber das mit dem links alignen versus rechts alignen. Padding, die Funktion hatte Funktionalität für links oder rechts alignen, das ist natürlich nett. Dann können wir die einfach verwenden. Wir wollten diese Dinge rechts alignen, also front gleich false und Passwort brauchen wir nicht alignen, weil es sind immer fünf Sternchen. Alles klar, testen wir also den Test noch einmal. Was ist diesmal falsch? Das sieht mir nicht richtig rechts aligned aus. Gleichzeitig ist expected auch links aligned. Ah, da habe ich wohl irgendwas schlecht gesehen. Mal schauen. Expected ist links aligned tatsächlich. Das heißt, ich habe eben auf die falschen Dinge geschaut. Dann ändern wir das also wieder zurück. Upsi, upsi. Was war denn dann falsch, wenn es richtig aligned war? Ich glaube, hier ist actual expected und expected actual. Vielleicht habe ich die falsch rum. Was ist denn? Hier gibt es nur first und second. Aber tatsächlich, das was mir bei actual angezeigt wird, sieht so aus, als wäre es das, was ich bei expected angegeben habe. Also gehen wir expected und result wechseln. Vielleicht werde ich dann weniger verwirrt. Jetzt haben wir expected links aligned und tatsächlich ist es wahrscheinlich immer noch links aligned, aber einfach so falsch gewesen. Kann ja mal passieren. Das heißt, um das zu reparieren, wollen wir das hier links alignen und das hier rechts alignen. Das passiert auch schon. Das ist rechts, das ist links. Und so haben wir die Namenlänge, die wir übernommen haben. Warum klappt denn das dann nicht? Zwei Spaces, zwei Spaces. Zwei Spaces, zwei Spaces. Das sieht mir doch eigentlich ganz gut aus. Tja, schwierig, schwierig. Vielleicht ist die Padding-Funktion nicht richtig. Dann lassen wir uns doch mal die Padding-Funktion testen. Dafür gehe ich die Padding-Funktion mal nochmal in die Test-Funktion rein kopieren. Und würde gerne eine Autocompetition für diese Funktion haben. So, macht das Sinn, was hier getestet wird? Das sieht nach einem sinnvollen Test aus. Das sieht auch nach einem sinnvollen Test aus. Die sehen alle erstmal ganz nett aus, diese Tests. Probieren wir sie also mal aus. Die haben geklappt. Das heißt, die Test-Funktion war wahrscheinlich nicht falsch. Was könnte denn dann das Problem sein? So, hier zum Aufräumen erstmal mal. Tja, das ist jetzt natürlich mies. Unsere Länge sieht auch sinnvoll aus. Wir starten mit der Länge von dem Titel. Dann bilden wir das Maximum von jeweils dem nächsten Eintrag und dem existierenden. Wir haben also hier eine krasse Funktion, die das Maximum von der Liste berechnet. Dann haben wir zwei Spaces, womit der String anfangen soll. Wir haben den Namen padded with Spaces at the back, was front-page-true ist, was hier verwendet wird. Wieder zwei Spaces. Wir haben die Info padded with Spaces at the back und dann wieder Spaces und Passwort. Das sieht mir jetzt vom Anschauen her richtig aus. Für die Einträge haben wir den Entry-Namen gepadded mit Spaces. Es ist ein bisschen schade, dass unsere Variablen nicht gleich heißen wie die in der Beschreibung, aber so ist das halt. Die werden vorne gepaddet und dann haben wir die Info-Länge, die auch vorne gepaddet wird. Und dann haben wir Sternchen mit 8 Spaces padded at the front. Das sieht hier nicht so aus, als hätten wir Padding am Anfang in der Implementation. Ergänzen wir das also, aber das war nicht das Problem, was wir eben hatten. Warum schreit mich jetzt der Editor an? Wahrscheinlich ist die Zeit zu lang. Warum ist denn jetzt immer noch leider das Ergebnis falsch? Was ist denn an diesem Ergebnis falsch? Zwei Spaces. Hier sind zu viele Spaces. Sind es das? Die Implementation hat gesagt, padded at the back. Wir geben im Test 4 Spaces Abstand, und zwar 2 von Padding und 2 von Info. Und beim Testen sehen wir aber 6 Spaces Abstand. Das heißt, irgendwoher kommen 2 extra Spaces. Die werden also von PadStringNameLength kommen. Dann gehe ich doch mal die NameLength ausgeben, einfach mal zum Debuggen. Und vielleicht gleich auch noch die InfoLength. Das wäre doch mal ganz nett. Vielleicht sind die ja falsch. NameLength 6. PayPal sind 6 Buchstaben. InfoLength 8. CD add ef.de sind 8 Buchstaben. Das sieht mir doch auch richtig aus. Dann würde ich zum weiteren Testen hier einfach mal schauen, wo denn die Spaces herkommen. Die Spaces kamen von dem Info-Ding, was eigentlich... Ah, das ist hier falsch rum. Ich glaube, ich habe den Bug gesehen. Front und Back wurden hier falsch rum zugewiesen. Das heißt, wir wollen in den oberen Dingen False verwenden und in den unteren Dingen True. True war Default, also werfen wir die raus. Und dann ist es vielleicht sogar auch richtig am Ende. Mal schauen. Wow! Unglaublich! Wir haben einen Test geschrieben und der Test hat sogar erfolgreich ausgeführt. Habe ich denn jetzt alle Funktionalität implementiert? Ich habe noch nicht geprüft, was passiert, wenn ich versuche, mir ein Passwort anzeigen zu lassen. Das würde ich dann gleich mal ausprobieren. Show Entry. Unser Name fällt bei. Das wird sogar in grün angezeigt. Edit an existing Entry. Probieren wir das mal. Das scheint geklappt zu haben. Delete an existing Entry. Probieren wir das mal. Das scheint auch geklappt zu haben. Und wenn wir gar keine Passwörter haben, dann stürzt es auch nicht ab. Das ist ja nett.