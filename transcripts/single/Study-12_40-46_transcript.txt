Gut, wir haben die Session. Wir müssen die Entry machen. Was waren da die Argumente? Ich vermute mal, dass das einfach die, die hier sind, auch wenn ich verwirrt davon bin, dass es gerade keinen Konstruktor gibt. Keine Ahnung, tipp einfach die Dinger mal ein und mal gucken, was passiert. Entry für die Entry. Dann geben wir der Entry erstmal ID 1 und kümmern uns später darüber. Warte, wir haben doch den Current User. Achso, eine Idee. Jeder User kriegt eine neue ID. Wo ist denn User? Das ist doch auch hier. Ja, der hat eine ID. Aber wenn ich das da so mache, dann sollte der mir doch hier auch Typings geben können, oder? Keine Ahnung, ich habe das noch nie gemacht. Ja, dann sieht er sogar, dass das ein User ist. Fügen wir die mal hier ein, dann ist es einfacher, die Dinger zu programmieren. Ich glaube, das ist da, äh, keine Ahnung. Ja, komm, egal, das ist ein User. Current User, IP. Das dürften ja alles Strings sein. User. Was ist denn der Relationship? Was ist das denn? Ah, das ist einfach nur eben sein Name. Gut, und die anderen drei sind ja gegeben als Argumente. Okay, und jetzt müssen wir das irgendwie in die Datenbank einfliegen. Ach stimmt, das ist wieder gar nicht im Nutzerdeal. Wie fügen wir das jetzt in die Datenbank ein? Wir haben hier den User. Ah, nee, wir müssen das praktisch in das User-Objekt in die Datenbank einfügen. Das heißt, wir müssen uns zuerst den User aus der Datenbank ziehen und dem dann das Objekt geben in seine Entries und den dann wieder einbauen. Macht das Sinn? Klingt sinnvoll, ja. Wobei, wenn du den einbaust, ist das, wenn du das Objekt hier rausziehst und dann von dem Objektenwert änderst, müsste das nicht automatisch übernommen werden? Das ist halt die Frage, wie dynamisch das funktioniert. Ah nee, warte mal, hier habt ihr euch doch vorhin was gesehen von Modifying-Entries. Irgendwo hatte ich das gesehen. Session, nee. Google-Integrations-SQL-Key-Modifying-Entry. To update a row entry. Update. Boah, das ist ein Befehl. Ah nee, guck mal, hier. User.soundso und dann Session.commit. Kann es sein, dass man hier auch Session.commit machen muss, nachdem man Dinge hinzufügt? Kann sein. Kannst es ja mal hinschreiben, rauszuholen. Ich bezweifle, dass es was kaputt macht, wenn man es vielleicht nicht richtig hinschreibt. Place an object into Session. Schreiben wir es einfach mal hin. Ja. Aber besser als das wieder zu suchen. Wir brauchen ja auch nicht mit Login brauchen wir das nicht, oder? Nee, nee, der sucht immer. Das heißt, wir wollen jetzt hier, nee, das war das andere. User. Nee, stopp mal, wir müssen den ja erstmal aus der Datenbank rausziehen. Kannst du das machen wie bei Login, theoretisch. Da hatten wir den ja auch rausgezogen.