OK, OK, the longest value in the name column and the info column. So I see. So now, because we have this, OK, so padded width is 2.8 at the front. Ah, I see. I see, I see. OK, this is going to be harder. OK. So here, we can say, find the length of the longest value in the name column. And let's see if it's doing something. And name equals to reduce lambda. Oh, lambda function's great. Max length, entry name for entry. That looks nice. Plus, plus, plus. This is OK. But I don't think it's correct, but I can use it. OK, so for example, I don't need all of this. Entries equals current session. We don't have session. Wait, do we only have the current user? The user that is currently logged in. Of all entries of that user. OK, so we don't need this for now. Maybe we can do current user dot. Dot? What am I doing? Find the length of the longest value in the name column. Column. Actually, don't need this. I kind of just want that. But once again, we will ask for pilot. Because we actually don't have the reference to the session. So what is this? Max. We could just change this to four. So for example. Delete entry. Is there one of these up here? Not really. Get an entry of a user by name. Get entry of user. But technically, this is max. This should return the right thing. But we actually don't have a list of entries right now. We have a current user. But that's not right. OK, I'm really. I'm really. db.getEntryView. I actually don't know how to proceed from here. But that looks good. Whoa. Whoa. But this is not good. This is every shit. string. We pad name. And we use padString. And because it's using padString wrong. It's because there are some where we go front. And there are some where we don't go front. And it's not using it correctly. But it's actually a good starting point. So let me just comment it out for now. And then. OK. So we have our user. Our user.name is a column of string. User. I don't know. A user that is currently logged in. We don't have a string. But we have a user. It's a table of users. So I think I will not do this. Because I think the others seem a bit easier. So I'll just go down. Get an entry from user.name. The user that is currently logged in. The entry name. Treasure entry. If it is, OK. This seems doable. I'm trying to get an entry from user.name. And then let's go about it. It's pretty short. We'll just turn session.queryEntry.filterEntry.name equals name. I don't think this works. Get an entry from user.name. Yeah. OK. So let me query. Does it turn none if it doesn't get anything? OK. This is not what I want. I'll use it as a table. Use it as a class. So we have ID, name, password, entries. Entry. Let's. Oh my god. This is just getting a bit confused. Let's. At least I'm sure this one will be easier. I hope. Let's try this one. OK, that was an entry. No, because we have a handle to this session. Entry. Update an entry. OK. Get the entry first. It's not none. But this is not returning true or false. That's why it has entry name. Name. Entry. Info. It's info. Entry.password is password. But how do we actually get the entry? So actually, this is the most likely, but I need to change it. Session.updateNull. Oh, cancel. Cancel. This is still not right. Because this is definitely not right. Entry equals to session. Yes, we created that. We filled out. OK, same. Ah, we actually just go get the entry to update. We don't need this. I think that's better. OK. That looks good. Entry is not none. Info.password. Session add. Is there even a session commit? I guess. It's a database file. Oh, we did in the exams. We do need to commit a transaction. Let's just don't worry about that for now. Update the info. Update the password. Update the name. Yes. I think this is OK. Now we get entry back to this. This should be something similar. Gets an entry from a user by name. Current user. Entry name. It's the same problem where we had, where there was no session commit. Term session. Path created error. I guess we don't create that. Source like this. Get entry. User has logged in. Get an entry from a user by name. Entry name. What did it try to tell me? Any other suggestions? Nope. Both of these require session, which we don't have. Let's type something else. Current user. Let's look that up. Current user. It's either filter or .entries or filter. Can you do that? Does your user have entries? Your user does have entries. That seems a bit better. Then... I see, I see. I think I get it. I understand a bit more what's going on. So, let's... Let's actually just go back and look at everything we did before. That's fine. Let's check that. If the user is none... Yeah, that's fine. If the user... Okay, we have a session. We'll carry it for the users in that session. I will say username. Username. User. Let me find the user. Returned user. Okay, that's fine. By adding an entry, you go to entries. Do you filter? Because... This is already an entry, so entry name. Entry ID. If both of these exist, you return false. But if there are no other entries, you add an entry, which is that. An entry is... ID you don't need, but you need. User ID, user. User ID. Don't you need user? Oh, it's a relationship user. Okay. Current user, user. Current user. Disappear. Current... Positional argument. Keyword argument. But here, what are we supposed to return? Backpopulates. Oh, dear. You basically have to look in here and get... What do you do here? Let me just actually first take that away. Session.add. Session.add. So I'm just going to assume that this is correct for now.