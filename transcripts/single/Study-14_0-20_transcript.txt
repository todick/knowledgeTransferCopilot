Sekunde, Sekunde. Ah, dieses crazy Fragezeichen. Das ist klein, wie krieg ich das groß? Das darf Niklas mir nicht sagen, aber ich hab's hingekriegt. Damn! Assignment. Oh, wir können das nicht. Assignment brauchst du in deinen OBS. Soll ich die Aufnahme starten, Niklas? Das wäre Premium. Okay. Musst du OBS sehen oder darf ich das verstecken? Du kannst das verstecken. Du darfst den ganzen Bildschirm benutzen. The goal of this assignment is to write a small parallel terminal application. Interfaces will be divided to store the user's password. And it will find a complete... Müssen wir das auch vorlesen, oder dürfen wir leise denken? Ich denke, wir dürfen leise lesen. Okay, I don't understand that. This is Python. And here is PyCharm. I don't understand PyCharm. Wow, krass. We work together doing pair programming. Your task is to print all facts that are left blank. Microsoft 2.2 you can find in DB. You may print anything. Ach du Scheiße, es ist zu leid. It's like content of the database. Please refer to documentation in the code. You can write your own test, for example, using PyTestPackage. Which is also installed from... Kannst du mal die Heizung machen, Benjamin? You can write your own test. Ah ja, das hatten wir schon. Which is also installed from... Tests, natürlich. Hm, geht nicht. Ich habe die Eins gedrückt, aber das Ente interpretiert. Niklas, deine Tastatur ist absolut broken. Habe ich dich damit gemacht? Eigentlich nicht. Okay, ja. Aber, ah, ich weiß. Wo sind wir denn jetzt? Gehen wir mal hier und gehen hier mal wieder. Okay. Oh, das passt mit dem Klartext angezeigt. Oh, krass. Oh, krass. Oh, krass. Oh, krass. Oh, krass. Oh, krass. Oh, krass. Oh, krass. Oh, krass. Das sagt er bestimmt jedes Mal. Okay, das müssen wir machen. Alter. Check. Check. Okay. Dann legen wir mal los, oder? Ja, legen wir mal los. Kannst du tippen? Nee, ich muss das mal kurz machen. Da am Schluss, oder? Nee, das geht nicht. Aber man kann hier was aktivieren. Zoom. Ähm. Hm. Hm, das ging mal. Ha. Okay. Das hätte ja... ...dulderlich sein können. Co-Pilot. So. Dann legen wir los. Daniel, du musst mir diktieren, was tun wir eigentlich? Okay, dann nehme ich die Maus, du das Keyboard. Nee, da habe ich eine noch schlechtere Idee. Okay. Ja, weil das Telefon... Okay. Extend a given string with spaces. In welche Richtung? Das ist leider wichtig. Nein, das kann man jetzt ausdecken. Okay. Okay, das machen wir. Okay, das kann ich noch. So weit komme ich. Text kannst du noch entfalten. Text ist ja ein String. Dafür rechnest du erst mal die Bagger-District. Wir haben so ein if front. Nee, nee, nee. Wir machen das hinten so. Das brauchst du nicht. Wir müssen ja auch front, das musst du ja können. Das ist die dritte Variable. Egal. Wir können ja nachher noch den Code aufbauen. Nee, wir sollten ja schon alles implementieren. Mhm. Dann fange ich mal an mit if front. Nee, wir können das auch clever machen. Text. Was passiert, wenn wir gruselige Dinge tun? Was passiert, wenn wir ein String mit einer... Also man kann ja... Ähm. Wir brauchen nicht so viele Checks. Da steht ja von nichts. Ich traue Niklas nicht, du. Ihr habt das besser so. Spaces. Nee, wir sind in Python. Wir müssen keinen String zurückgeben. Hä? Wie können wir einfach auch... Wir können auch einfach none zurückgeben. Nein, ich glaube wir sollten schon den Text zurückgeben. Also ja, wir können auch nichts zurückgeben. Ich hab dir ja schon angestellt, alles gut. Ja, aber auch frei. Sondern ich wollte es halt nicht sagen. Und dann können wir so Dinge machen. Und dann... Hier ist ein Leerzeichen. Und dann sagen wir... Nein, warte. Das ist falsch rum. Ja, genau. Und ich kann... Das gibt's nicht. Ja, das... Es gibt doch kein caps lock. Niklas, nicht lachen. Das war so unsicher. Nein. Nein. Nein. Nein. Nein. Niklas, ich brauch die Maus. Nächste Funktion. Ich bin die Maus. Wir schauen mal, ob es funktioniert. Wie testen wir das dann? Wir schreiben einen Test. Wie schreibe ich einen Test, Niklas? Wir hoffen einfach, dass es funktioniert. Wir können ja mal ausführen und gucken, ob was kaputt geht. Ich glaube nicht. Oh ja, das ist clever. Okay, super. Perfekt. Das hast du schon implementiert. Das ist cool. Ich kann das nicht. Wir haben keine Ahnung, was Session ist. Session ist halt so unterhaltbar. Wir können die Autocompletion fragen. Nee, das ist ungetübt. Nee, es ist manchmal im Begehren. Das sagt uns tatsächlich nichts. Aber wir können noch mal da lesen. Ich glaube, wir bekommen nur von dem das Objekt. Okay, das ist vielleicht Session. Wir können mal draufklicken mit STRG. Krass. Scroll mal. Du musst STRG loslassen. Nee, du musst scrollen. Sonst sehe ich das nicht. Okay, dann können wir mal gucken, wo die Session herkommt. Ja. Okay, das ist natürlich cool. Scroll mal. Cool. Ich scroll mal die Maus. Ja, mach du mal die Maus. Keine Ahnung. Das ist ein Session-Objekt, das erstellt wird. Wir müssen irgendwas mit SQL machen. Nee, das müssen wir googeln. Okay, was ist denn das? SQL-Alchemy. Das stammt da. Ich habe meinen Escape auf Caps Lock gemappt. Weil das ist eigentlich sehr praktisch. Aber ich lasse wirklich die ganze Zeit Caps Lock. Darf ich deine Workstation umkonfigurieren, Niklas? Bitte sag ja oder nein. Sag doch mal ein Wort. Sag bitte nein. Ja, ja. Du magst Cookies. Ah, Quickstart. Das klingt doch gut. Scheiße. Oh Gott, was passiert hier? Kann unser Datenmodell das? Create Session gibt uns eine Engine. Nee, das gibt uns eine Session. Geh mal drauf, dann zeigt er doch bestimmt was an. Hier? Da? So? Nicht so. Ich glaube, hier stehen Dinge, die wir wollen. Der hat ja so eine Session und dann macht er Dinge. Und dann kann er Dinge hinzufügen. Ach, das sieht doch toll aus. Okay, das heißt, wir bauen einen User. Vielleicht nicht über den Dockstream. Ja, okay, gut. Na gut, das sehe ich ein. User gleich User Warning. Darf ich nicht über den Dockstream? Okay, wir bauen einen User. Okay, was will der denn? Wo willst du den User herbekommen? Wir haben doch ein Datenmodell, das ist doch cool. Dann öffnen wir mal nochmal das PDF, da stand irgendwas drin. Das ist schlecht. Ich kann so nicht arbeiten. Ja, sag doch einfach, dass du reingescrollt haben willst. Das ist okay. Okay, Table Name, Users, ID, Name, Column String. Rep. Okay. Und was kann das? Das ist eine gute Frage. Base. Das erbt auch von Base. Das ist gut, aber dann bekomme ich magisch einen Konstruktor, cool. Beides eine scheiß Sprache. Okay, brauchen wir eigentlich keine ID? Oder brauchen wir einen Namen? Die ID ist ja Auto-Inkrement, die brauchen wir nicht. Kommen wir sonst noch was? Aber nee, dem willst du das nicht. Zeig mal noch, wo ist denn das? Also hier, wir haben hier oben eine, die nicht aussieht, aber die gibt halt einfach so magisch User Passwort und dann Session Punkt Add All. Okay, wir können dann Session. Der schmeißt bestimmt einen Fehler, wenn das kaputt ist, oder? Sicher. Und dann User. Und dann Session. Commit. Ah, das Commit schmeißt jetzt den Fehler. Und dann können wir True ausgeben. Ja, aber wir müssen ja noch False ausgeben. Nee, aber ich weiß nicht, wie Commit funktioniert. Wir können das mal aushöhlen lassen und gucken, ob was kaputt geht, oder? Ja, da kommt bestimmt ein Fehler. So, darf ich? Ach nee, es läuft noch. Du musst da oben drücken. Nee, da liegst du daneben. So, wir machen hier 1, 1, 1. Nee, wir müssen einen neuen User erstellen, oder? Ah, 2, 2, 2. Created User 2, 2, 2. Dann probieren wir das nochmal. Nee, probieren wir nicht. Okay, Commit funktioniert immer einfach. Sucks. Nee, ich glaube, wir sagen dem ja nicht, dass wir... Ja, es kommt kein Fehler. Du musst noch schauen, dass es... Ah, weil Name auch nicht unique ist. Geh mal nochmal in Models und mach mal Name. Machen wir hier mal Komma und schauen mal, was uns vorschlägt. Gar nix. Das ist ja wieder scheiße. Wir können V sein und Nutzer suchen. Das ist, glaube ich, schneller. Unique gleich True. So, erstellt mal neu. 2, 2, 2. 2, 2, 2. Die Frage ist, was der eigentlich macht. Ähm, diese Database, die ist irgendwo bestimmt gespeichert in so einem SQ. Nein, ich glaube, wir können den Output von Commit inspekten und dann sagt er uns, wie viel er bearbeitet hat, oder? Das machen so Dinge doch. Gründe mal einfach mal, was du uns zurückgibst. Okay. Red, was willst du? Das ist das, was du zurückgibst. Hä? Das dauert viel zu lange. Einfach einen Print-Commit auch. Du brauchst viel zu lange. Erscheint mal ein Nutzer mit einem anderen Namen. Gib mal einen Nutzer mit einem anderen Namen. Den wir noch nicht haben. Gib mal noch einen Namen zurück. Vielleicht sollten wir das auch sauber machen und erstmal nachschauen, bevor wir den einfach dazuschmeißen. Ja, das können wir auch machen. Lass mal los, ich kann ja auch. Simple Select. Ja, das wollen wir. Ja, kopier das mal. Select User, oder ich mach das. Warte, ich verstehe das noch nicht. Wenn du willst, auch. Select Klammer User .where Das ist nur die Frage, wo die Session hin ist. Da kommen wir gar keine Sessions. Das weiß ich auch nicht, wo die hin ist. Das hat mich auch gewundert. Das ist das Statement. Wir tun nur erstmal ein Statement generieren. User.Name .in Soll ich für dich testen? Mhm. Du musst mich da hinlassen. Nee, du musst da nur die Variable hinlassen. Und jetzt klicken wir auf das Select drauf. Einfach draufklicken. Und importieren. Und vielleicht nicht das hier. Das sieht gut aus. Krass. Und jetzt machen wir das. POS1 So. Dann machen wir hier ein If draus. Das funktioniert auch bestimmt. Ende. Und dann machen wir ein Return. False. Der printet ja nochmal was, dass man das auch testen kann. Nee. Ja, ich mein, hoffentlich macht der das ja richtig. Also machen wir hier erstmal E. E already exists. Okay. Und bei If prüfst du nur, ob das etwas zurückgibt, das nicht ein anderes. Ja, aber so eine leere Liste ist bestimmt auch false. Nee, nee, eine leere Liste ist glaube ich auch true. Haben wir irgendwo sowas wie Python? Hier haben wir sowas wie Python. Du kannst len machen. Lenscalars. If. Okay. Nee, und das würde ja keine Liste zurückgeben. Das würde ein Iterator sein. Ja, okay. Darf ich kurz? Wir können, glaube ich, sowas machen. Besser draus probieren. Ja, genau. Ja, aber das musst du ja nicht printen. Ja, ich trau dem einfach nicht. Ich weiß halt nicht, was wir noch nicht implementiert haben, was Niklas unglücklich macht. So. 2, 2, 2. Yo, krass. Ähm, ja. Da sind wir wieder. Aber wir können ja mal schauen. Was returnt denn das? Das Scalars. Wir können ja ein Scalarresult aufzutragen. One or none. Was gibt denn one or none zurück? Wir können sagen first. First, firster Objekt oder none. One. Das heißt, wir sagen hier. Ich würde hier one or none. Das ist bestimmt schneller. Nee, nee. Das Problem ist das, wenn wenn wir dann mehrere Namen, Leute mit dem Namen haben, die nerven sich schrecklich kaputt. Du hast schon zwei schon ganz auf der Stelle. Zwei geöffnet schon. Zwei, ein, ja, irgendwas. Yo. Erstes Completed. Also mittelcompleted. Nee, mach mal das To-Do-Bag. Und das Pass. Und die Prints. Nee, das war... Ich bin ja gelöscht. Okay. Ja, jetzt gehen wir mal weiter nach Login. Müssen wir das Passwort hashen? Ah nein, das Passwort ist schon gehasht. Und unten? Auch gehasht. Das ist ja natürlich nett. Okay. Ja, auf geht's. Ich mach mal ein bisschen... Ja, du darfst mal selecten. So. Easy. Und jetzt? If the user... Return the user object if the user exists can be logged in else none. Da möchtest du die Ausgabe von... Nee, du möchtest die Ausgabe von Session2Scaler.First speichern. Mhm. Sowas wie...