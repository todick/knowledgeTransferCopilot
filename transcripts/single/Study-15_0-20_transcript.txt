Was auch immer der Chef sagt. Dann... Los geht's. Du bist klein. Lass mir den Stift rein. Geil, wir brauchen das ja nicht zu sehen. Ach warte, nee, der nimmt nur das hier auf, gell? Nein, der nimmt beide Bildschirme auf. Gut. Ach, wir müssen To-Do-Suppe finden. Das hast du gerade eben vorgelegt. Ein Scherz. Ich fühle mich schon wieder so super zurückversetzt. Kannst du noch ein bisschen weiter runter scrollen? Du liest zu schnell. Sorry. Ich habe nur gedacht, das hat er uns eh alles schon gesagt. Ja, das hat er auch trotzdem gelesen. Okay. Verdammt, da geht es ja noch weiter. Machst du noch ein zweites Mal? Nur zwei. Immerhin keine 60. Wo ist da das Salt beim Passwort? Passwort in Plaintext. Das reicht sicher. Hast du gelesen? Ja. So, wo fangen wir denn an? Was macht denn die Menso? Sagen wir einfach, wir suchen nach dem ersten To-Do. Und da sind keine To-Dos. Ja. Da müssen wir das nicht machen. Okay, warte. Okay, lass mal kurz die Daten mal gucken, ob es überhaupt schon Inhalt gibt. Oh nein. Okay, komm, ein String mit Spaces extenden, das kann ja nicht so schwer sein. Gibt es schon eine Database-Struktur oder muss die erst noch gemacht werden? Models. Yay. Ich sehe kein To-Do. Das ist ja beruhigend. Ja, aber die beiden sind hier auch schon perfekt beschrieben. Ja, hätte ich auch sagen können, dass wir es trotzdem machen müssen. Vielleicht steht es auch irgendwo, dass es schon implementiert ist, habe ich noch nicht gelesen. Okay, Main und Models, also fertig. Options sieht mir ziemlich fertig aus. Terminal. Ist auch fertig. Ach warte, Python hat doch hier auch irgendwo To-Do. Boah. Okay, wir müssen also nur Datenbank implementieren. Das stand bestimmt irgendwo im Text. Ja. Okay, fangen wir einfach mal oben an. Ja. Extend the String with Spaces. The Text. The Total Length. Wie ist das denn? In Python sind das immer wieder so Arrays. Soll ich das einfach kurz dahin jieten? Okay. Also. Und dann gehen wir hin und sagen und dann knallen wir das davor. Nee. Da müssen wir die Autokomplizieren nicht. Und zwar das hier. Spaces haben wir ja noch. Also Spaces mal Oh Gott, das ist jetzt. Nein, da haben wir Spaces plus den Original Text. Den haben wir noch nicht, das müssen wir gleich noch rechnen. Total Length wie das Text. Ähhh. So. Ach, sonst machen wir bisher echt gutes Pebble Grim. Ich glaube, wir wissen beide, was dabei rumkrochen soll. Das geht auch in weniger Zeilen, aber. Was hast du gerade gesagt bezüglich Total Length minus Text Length? So weit, so gut. Kommentieren wir das? Nö. Ist ja kommentiert. So, ist so weit, so schön. Okay. Testen wir das? Nö. Wir testen am Ende. Was ist das hier eigentlich? Ah. Okay. Ist bereits implementiert. Ähhh. Ja, also ich wollte gerade schon sagen, das ist ein Modpack. Das Modpack kenne ich nicht, die Library kenne ich noch nicht. Okay, dann. Wer benutzt Haben wir schon ein Datenbankobjekt in der Klasse? Oder sowas. Was ist denn das Datenbankding überhaupt? Nein, das will ich nicht. Wo kommt denn DB her? DB ist unsere Datenbank. Das ist die, die wir gerade implementieren. Nee, oder ist das die? Ja. Das ist keine Klasse. Das Ding, was wir da gerade implementieren. Aber hier, das ist glaube ich von dem SQL Alchemist Ding. Import DB und Ach, das ist gar keine Klasse. Das ist einfach nur das Modul. Okay, interessant. Warum kann man jetzt einfach Terminal verwenden, um da neue Sachen reinzukriegen? Ja, ich wollte nur wissen, was das Session Ding kann, damit ich gleich googeln kann, wie man das benutzt. Aber Session ist glaube ich einfach nur ein Eintrag da drin, oder? Ist da ein Eintrag da drin? Nee. Session ist einfach das. Das hier ist glaube ich Session. Also nur noch rausfinden wir das. Och nö. Okay, es wird anscheinend in dem Login gemacht, gehe ich mal davon aus. Würde ich mal frech behaupten. Also hier wird wahrscheinlich die Session erstellt. Wehe, da steht ein Tutu. Fuck. Ach komm schon. Okay. Dann gehen wir einmal... Ach scheiße, das habe ich ja nur bei mir so konfiguriert. Und... Ja. Das wird nichts. Nein. Mach doch. Warum geht denn das nicht? Gib auf. Nee, aufgegeben wird hier nicht. So, wie ist das Ding? Ja, sagen wir benutzen. Oder so. Alle akzeptieren. Ist das Python überhaupt? Nicht, dass es ihn auch für etwas anderes gibt. Sieht gut aus. So. Schöne Seite. Wow. Wo ist ein Getting Started? Das sind Tutorials. Nein. Nein. Nur 45 Minuten. Das ist ja super lustig. Einfach Chatshippity zu öffnen und im Fake Programming Chatshippity zu öffnen. Okay. Weißt du, was wir jetzt einfach ganz dumm machen? Ja. Ja. Using Sessions, das ist doch schön. Och nö. Opening and Closing a Session. Das war aber noch Basic Use. Ich weiß nicht, ob das bitte schlecht ist. Basic Use. Okay. Was lese ich da? Ist das hier überhaupt schon exportiert? Nein. Scheißendreck. Warum existiert denn die Session hier schon? Es gibt eine Create Session Engine. Die du dann an das Ding dran hängst. Um eine Engine zu kriegen. Von der du dann eine Session erstellst. Das ist ja wunderschön. Da das hier nicht importiert ist, würde ich einfach mal frech behaupten, dass das schon mal irgendwo passiert ist. Scheiße. Desktop Terminal. Alter, sag nur. Login Krabby. Hat der das importiert? Nein, natürlich nicht. Ach, es gibt einen Test. Ah nein, das ist Datenbank hoch. Okay, das bedeutet, wir müssen es komplett selbst... Ah ne. Oh. Create Session. Hier kommt also eine Session her. Das ist ja schön. Terminal.Session.Session Was? Ah. Ah, okay. Das setzt die Session. Also gibt es die Session schon. Gut to know. Hätte mir das gar nicht googeln brauchen. Also setzt das Main den Start der Session? Ja. Also es erstellt die Session. Das macht genau das, was wir hier sehen. Schön. Beruhigend. Was wollten wir jetzt eigentlich tun? Herausfinden, was das Login überhaupt können soll. Wo ist es denn? Hier. Okay, also. Mal so dumm formuliert. Wir müssen check if user exists. Create user. Und was sollen wir machen, wenn schon einer existet? Return the same to user object. Und für das Create user können wir den new user. Was meinst du? Also das darüber kreiert auch bestimmten neuen User. Ja. Okay, also können wir einfach hier. Ach, das heißt new user, nicht create new user. So weit, so gut. Das haben wir auf jeden Fall in dieser Reihenfolge tun. So weit, so gut. Dann gucken wir, glaube ich, als nächstes mal, wie man querried. Dann finden wir entweder raus, wie man querried. Select user filter by name. Jetzt die große Frage. Okay, nur id ist unique. Wie soll das denn gehen? Ah, user with a given name and password exists. Also haben wir beides checken. Wenn wir zweimal filtern müssen, glaubst du, dass es dann... Ich hätte es einfach als Komma-Schreibweise so probiert. Weil das hier ist ja das, was du in der Datenbank drin stehen hast. Wo ist denn das Ding? Ich schau mal hier rüber. So. Select ist erstmal noch nicht da. Fuck, das war falsch. Das ist das Falsche. Das da wollte ich auch nicht. Okay, so, dann ist Name und Password ist Password. Das Rot sieht schon irgendwie falsch aus. Nee, das ist einfach nur... Das ist der Hint, welches von den Attributen er zeiten soll. Du kannst dich auch in der Reihenfolge ändern. Alles, was falsch ist, wird unterquerried. So wie hier zum Beispiel. Was gibt er zurück, wenn da nichts drin steht? Wahrscheinlich non. Können wir ja. Warte, wir müssen erstmal rausfinden. Also so querried man. Und all brauchen wir eigentlich nicht. Wir brauchen ja nur one. Also haben wir UserObject, das wir hier benutzen. Und dann gucken wir mal. Ja, es gibt nur one. Das hier. Genau, einmal returnen dann. Und dann können wir einfach hingehen und sagen, if UserObject no, if not UserObject Und else müssen wir zurückgeben. Gar nichts, dann steht das schon hier drin. Okay, dann müssen wir jetzt rausfinden, was das hinzufügt. Okay, wir haben also einen User, der einen Username hat. Das ist auch weird, weil bei dem einen muss man eine Query schreiben, bei dem anderen Ja. Und dann müssen wir Session UserObject ist Session Punkt Add Warte, kommt die schon wieder nicht? User. Return User. Nein, nicht return. Aber wir müssen dann im Wahrheitswert zurückgehen. Nee, weil wenn... True, if no user Ich verwende Wunderschön. True, if no user with the given name What? Das ist das, was wir in unserem if bräuchten. Für das UserObject. Weißt du was, das fühlt immer aus. So. Dann haben wir das hier stattdessen. Das ist true, weil da haben wir ja schon einen. Ja, und im if vor Ort. Wunderschön.