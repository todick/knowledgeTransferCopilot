Timer 45 Minuten. Start Recording. Du kannst den zweiten Bildschirm eigentlich benutzen, nur nicht OBS zumachen, das wäre blöd. Ja, ok. Dann los. Und immer schön reden. Ok. Gucke ich mir mal erst an, was ich überhaupt gemacht haben soll. Test Package. Ja, ich bin noch gerade am lesen, da denke ich nicht viel nach. Immer laut reden. Immer laut reden. Ok. Ok, bei Test Package können wir Test machen. Ok, man kann direkt die Run Configuration benutzen. Ok, folgende Features. Der User kann direkt einen Account erstellen oder sich einen einloggen. Wenn der User eingeloggt ist, kann man eine Liste der Einträge sehen, nur mit Namen und Beschreibung. Rundliche Passwörter. Einen bestimmten Eintrag, damit man das Passwort sehen kann. Einen neuen Eintrag zukündigen. Einen Eintrag ändern und einen Eintrag löschen. Ok, fünf verschiedene Files. Ok, die Database. Ok, mit wem fangen wir an? Ja. Das sind die Data Models. Options. Logic of Terminal. Miniscreen. Da muss ich noch genauer gucken. Terminal. State Machine. Ok. Actual Control Flow. Ok. Ok, es gibt den User. Der Name. Passwort. Entry. Das sind Entries. Entries. Wenn die Informationen über die Passwörter passen. Also wie die Passwörter gespeichert werden in der Database. Ok, also diese Entries kommen zu dem User dann entsprechend. Ok, der Service Package ist installiert. Ok, das ist gut. Ok, Colorful Terminal Text. Wahrscheinlich werden da irgendwelche To-Dos drin sein dafür. Ok, dann gucke ich mir mal an, wie was gemacht werden muss. Database Connection. Ich suche mir jetzt die To-Dos. Ich suche gerade die To-Dos und ich habe bisher noch keins gefunden. Das bewirrt mich, weil ich dachte, dass da eigentlich schon welche wären. To-Do. Ok, das ist leicht. Ok, gucken wir mal, was Copilot uns schon direkt sagt. Also ich kann das ja hier machen. Komplettationsverfahren. Ok. Ich gucke mir gerade die Lösungen an und ich verstehe sie nicht wirklich. Weil I'll just ist mir jetzt nicht klar, was das genau bedeutet. Das macht es ein bisschen schwierig jetzt genau zu verstehen, was da jetzt gemacht wird. Ich denke, wenn man mehr Ahnung von den Funktionen dazu hätte, wäre es leichter. Allerdings hat er jetzt auch keine anderen Beispiele dafür. Ich gucke mir mal die I'll just Funktion an. Ok, das verlängert das dann. Das würde schon Sinn machen, dass das dann jetzt so ist. Ok, das ist ein komischer Vorschlag. Der macht gar keinen Sinn. Ich probiere einfach mal das erste aus und würde dann einfach einen Test schreiben. Ok, ich muss noch mal nachgucken, wie die Tester nochmal aufgerufen werden. Test, Test, Test. Pytest Package, TestDB, da können wir das machen. Achso, das ist ja ein Database. Was mache ich denn? Habe ich hier Konsolen? Habe ich hier nicht nur meine Konsolen? Ok, ich weiß natürlich nicht genau, wo PET-String drin ist. Das heißt, ich suche erstmal, wo das genau definiert ist. Ich sehe jetzt nicht genau, wo das definiert ist, weil das ist ja jetzt nur Pytest Cache. Gute Frage, das weiß ich jetzt nicht genau. Ich probiere einfach mal das aus. Ok, ich implementiere einfach mal weiter und gucke mir dann an, wo noch was gemacht wird. Das muss ich mir dann später nochmal hinzugeben. Ok, das heißt, wir können die Database sessionen. Wir haben den Username und das Passwort mit dem Hash. Ok, das heißt, wir müssen einfach überprüfen in der Session. Da sind wir vielleicht schneller, wenn wir direkt das durchgucken. Ok, er fügt es einfach hinzu, aber er überprüft gar nicht, ob dieser User bereits schon existiert und gibt nicht das Richtige zurück. Das hier würde Sinn machen wahrscheinlich. Ich müsste mir jetzt nochmal angucken, wie genau Add definiert ist. In Session Add. Ich weiß jetzt nicht, wo Add definiert ist. In Session Add Database. Gibt ein User hinzu. Da wird ja wahrscheinlich schon etwas returnen. Aber es macht ja Sinn, dass wir mal jetzt... Ich würde halt nicht gewissen, was hier... Session Database, Session Object. Ich weiß nicht genau, wie das definiert ist. Das macht mir Probleme. Ich gucke mir nochmal in der Main an. Jetzt genau gestartet mit Session. Ok, Session ist Database. Ist hier definiert. Hier muss ich jetzt nochmal eine Add Methode finden. Ok, Add Methode. Returnt nichts. Das heißt, wir wissen jetzt aber auch nicht genau, ob es schon drin war oder nicht. Achso, wir müssen einfach überprüfen, ob der User schon drin war. Gibt es etwas mit Exist oder Get? Vielleicht Get. Ich würde gerne Get benutzen, aber irgendwie hilft er mir nicht wirklich viel weiter. Macht das Sinn, hier User Get zu haben? Ich weiß einfach mal nicht, ob so ein User existiert. Ansonsten wird der User hinzugefügt. Und dann sollte er aber noch... Ok, das würde zumindest so machen, dass es jetzt so drin ist. Ok, ToDo ist noch ein Login. Jetzt müssen wir uns angucken, ob es einen User gibt mit diesem Name oder Password. Und wir returnen das User Object. Ok, wir returnen nur das User Object oder None, falls es es nicht gibt. Das heißt, wir würden jetzt einfach nur... Ich will jetzt trotzdem mal sehen, was GitHub Copilot jetzt da für Vorschläge macht. Ok, jetzt macht er hier queryUserFilter. Ok, das könnte... Filter by Name... Das macht auch alles Sinn. Ich denke... Ich denke, das ist korrekter als das, was ich oben habe mit Get. Weil da habe ich eigentlich keine Ahnung. Ich werde das mal einfach holen. Wir müssen jetzt überprüfen, dass der Username gleich ist und das Passwort gleich ist. Das ist jetzt wichtig. Wenn wir erst passen, dann haben wir das dann. Und dann return. Ok, aber... Ja doch, dann müssen wir das returnen. Ich weiß nicht, ob das geht. Ich weiß nicht, ob wir sonst nämlich was anderes zurückgeben. Ich weiß nicht, was genau SessionQuery da zurückgibt. Ich könnte noch einmal kurz nachgucken. Das ist ein bisschen schwierig jetzt direkt rauszulesen. Ich werde mir einfach jetzt dem GitHub Copilot mal vertrauen. Ich werde auch... Ich werde jetzt noch... Is a hash. Ich werde das später nochmal zurückgeben. Das heißt, ich werde mir den ToDo nochmal dahin machen, wenn ich mir das nochmal angucke. Dann müssen wir einen User, der schon eingeloggt ist... Der hat einen EntryName, EntryInfo... PasswordFalse... Ok, das heißt, wir müssen jetzt zu der Session diese Entry hinzufügen. Das macht Sinn. Wir sollten aber erst noch überprüfen, ob das schon existiert. Das heißt, wir können einfach oben dasselbe nochmal überprüfen. SessionQuery... Ich gucke nochmal... Ja, ok, er macht schon... Ok, er macht jetzt sogar dasselbe wieder, was ich da vorher noch mit dem None gemacht habe. Das macht irgendwie wenig Sinn, hier einen None dahinter zu machen. Wir geben ja gerade nichts zurück. Das heißt, wir überprüfen nochmal, ob das existiert. Und dann return we are false, ja. Und dann sonst return wir nochmal true. Ich würde erstmal testen, ob ich jetzt... Ne, warte, ich habe jetzt noch keinen new User. Also ich probiere erstmal erst einen neuen User zu machen, damit ich das mal sehen kann. Ich würde jetzt einfach... Ich denke, das wird jetzt eben noch im Moment nicht richtig funktionieren, aber ich probiere es einfach trotzdem. Wir machen den User A mit dem Passwort B. Ok, ja. Ja, Geld macht wenig Sinn. Gut, dann probieren wir jetzt mal einfach das aus, was Github Copilot vorgeschlagen hat. So, User A, Passwort B. Ah, das hat schon mal geklappt. Das Github Copilot hat das gut gefunden. Da hätte ich nicht deutlich länger gebraucht dafür. Ok, jetzt probieren wir noch gerade schnell, ob wir anders einloggen können jetzt. Mit Name A, Passwort B. Ja, das hat funktioniert. Jetzt bringen wir mal eine Entry hinzu. Wir probieren erstmal, ob es das jetzt schon gibt. Also A und B nochmal. Ah ne, Info B. Info ist nur Test. Passwort ist B. Ok, das haben wir. Jetzt... Hier, was ich überprüfe, ist hier nur Entry Name und User ID. If there is already an Entry for that Name for the User. Ok, das ist fair. Machen wir nochmal eine Entry hinzu. Name A, Info Test. Passwort B, genau dasselbe. Ok, das scheint auch zu funktionieren. Er beschwert sich nämlich, dass es schon eine gibt. Probieren wir jetzt mal eine neue zu machen. Name B, Test B. Ja, das geht, ok. Delete Entry, ok. Ähm, ok. Da müssen wir jetzt gar nichts überprüfen. Ob etwas existiert oder nicht. Wir werden es einfach entfernen. Wahrscheinlich ist jetzt wieder was. Section Remove? Ne, ok. Dann fragen wir mal, geht das Copilot? Delete, ok. Der filtert das wieder raus und deletet das. Das macht Sinn für mich jetzt. Aber ich muss jetzt... Ich muss alles überprüfen, ich sei erfreut zurückzugeben.