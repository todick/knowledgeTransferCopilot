Night, you get to go. Okay. Okay, let's get this to open the invitation. Do you want to? Yes. 10 or 7. Let's put it here. How do you make it big? I think. You just drag them to the top. Per request that you will find, complete the additional ID that is going to project skeleton, okay? Program ID is Python and ID you work with is PyCharm. All the functions that are left blank, oh, okay, in the db.py. You can also use tools like SQL Viewer, anything related to databases. Okay. Push the first recommendation in the code, okay. And you can check first. It's probably just the docs. You can call Python 3. I forgot one thing. Can you click here and click on disabled completions? Thank you. In order to do this, you can use, you can call main py. Okay. Okay. Oh, okay. Project description manager. View list of all of their entries. Here, only the name and the description. And sort of the user is prompted to either create a new account or to log in an existing one. A user who is logged in can view a list of their entries. Here, only the name and description are shown, but not the password. The entries meaning every time you log in, right? Yeah. View list of all, list of their entries. Here, only the name and description of the entry. I think so. No, this is password manager. I guess so because password for this website, this website, this website. Ah, yeah, yeah, yeah. So all the entries. And the password itself. View particular entry in order to see the password. Add a new entry. Edit. Okay, yeah. I don't know. Files. The project array comes with several files. Okay. The program. Contains all the functions on track with the database. Okay. Initialization. Models.UI. Contains the classes of the data models as described in paragraph 4. Contains the capsules. Ah, that capsules some of the logic of the terminal ministries. Okay. Terminal. Contains the actual control flow. Okay. And seed machine. Wow. Um. Um. Wait until it packages. Click is used to pass command line parameters to the application. SQL Alchemy. Colorama. Access useful helper functions. Okay. That seems a lot. Yeah, let's see. Okay. What do we have in main create session? I think we start with the data. I think data is easier, right? More simple. But the thing that we need to implement, I think it's only on the db.py, right? I don't think we need to implement the others, not even the main. I think only the db.py. Yeah, the todo is only on the db.py. Okay. Extends a given string with spaces. How long the final string? Parameter front through. Okay. So I'm not sure. I mean, I can search on Google. It takes to extend to total length. Yeah. We just need to add spaces at the back. If it's false, yeah. If the last parameter is false, we add them to the list. I start searching for something and I start writing. It's something colon len auto append strings in Python, I guess. Text. You can use plus equal. Yeah, but we need to do this in a for loop that will work. I think yes. All right. I mean, we should run it for X amount of time. New text is equal to, oh, wait. Text. Then what we do is we start a for loop for I in range of zero to total length. Minus text.length, I guess. Why text.length? So the total length also includes the length of the text and the white spaces. Okay, okay. So we append them. Total length minus text.length. No, it's length. It's length of text. And then we do a semicolon. Okay. Wait, for loops in Python. Wait, I forgot about that. I have no idea. I mean, I can check. Wait, let's see here. Python for loop. Wait, no parameter total length. So in range, I mean, it's. Yeah, I just added the. Yeah, that's right. I forgot about that. Python is simpler. It's a hard language. For I in range. And then indentation. Wait, but this is, what is going to be here, the thing. So it's probably just text. Total length minus length. So suppose the total length is 10. And our text is length 5. So we need to add 5 more. So this is going to give us 5 and this is going to run from 0 to 4. So that's fine. Because we want 5 text. Okay. So we do new text. White space. Right? Yes. I guess we, no, do we return? So we return the new text, I guess. All right. And then at the end, we just return new text. But wait, so I don't know. I think for completeness, what if the text already. Wait, front, front. We need to take account. Ah, yes. Then I guess an if. I don't know if. No, no, we can just make an if inside. If it's front, then we append them in front. So front plus new text. Yeah, that's right. You're right. We can do it, we can do it. Thanks. If front. Then we do. New text equal. If front is not true. If not front, then we do what we did before, right? Yeah, and then else. Else we do. New text. New text equal. Equal. The empty space plus new text. Yep. Yes, I think. I think you need the colon here. Yes. You're right. Now the only thing I don't know is what if the text is already bigger than the total length. So if the text is already 11 and the total length we want is 10. That is something that is not specified. I mean, that is just for the sake of completeness, I guess. But I think we can just return the main text, right? So we can make an if before, I guess. If length of text is bigger than the total length. Greater or equal. Yeah, to the total length. To total underscore length. We just return the text or the new text. Then just return text. Let's leave it like that, whatever. It looks good enough, I guess. Let's write a comment here. If length of text is greater than the needed new length. Okay. Could be an edge. I just write them because then you never know what you did over there. Okay, this should be fine, whatever. The hash password is fine. Computes the empty hash of a given string. Yes, so. I know this has no to-do, so it's already done. I think our colleague already done it. Adds a new user to the database if one given with the name does not already exist. Okay, this is if they want to create new. Okay. The database session object, but then here we need the database session. It's already given in here. Yeah, but what are the, you know the. I mean. Where is the context of the functions? Classes, models, user session. How do we find the session? No, I don't think it's out there. How do we know what the session data object looks like? I mean, they said we can use SQLite, I guess, for example, for that one. But I don't know what for this. Drop a file here. That's hard. I don't know how to find the. How do we find. I mean, we can check the main. What is this requirements? We can check either the main or the terminal, I guess, to check from where. Okay, this one. Create session. They have create session path, and then did they use it? Documentation. Oh, wait. I think in this they told us where the file is, what the file is. Go down. I think he said something on you can test the program using what run. So go up maybe. Yeah, this one. So it's test.db, I guess. So we can either check the test.db. Apparently, you can call Python main32db in the terminal. In the terminal. So where is the location? KT.study. Okay. Python main32db. No, this is like. To test if our program works. I just want to check what the file is, right? So I think either we. I don't know how we can. Oh, I mean, this is the test.db. Can you just try to drag it here? I mean, try to open the SQLite website again. This one. Yeah. You want to. Yes. Where is it? There is a scope here. Yeah. Now we need to. Yes. Execute. I just try to execute, I guess. I don't know. No, we have zero rows in our file currently. Okay. So we have not. Our database is empty. Yeah, that makes total sense. Wait. What does the test.db even is? Can we check the test.db? Is this thing. Oh. It's basically, if I'm not mistaken, is the database. Because look, it says entry zero rows. Okay. So we have zero rows in our table, in our SQL table. Oh, okay. Wait. So we got stuck here on the session thing because we wanted to see what a session object looks like. But what are we supposed to do to the database? Let's see. Let's see. PyCharm is smart. I think so. So what if we session.find. I don't think it's that smart. I think we disable that. Yeah. Session. Copilot. I mean, I don't think we can work on the, with the db session object. Let me abort it. Python. No worries. Just Google it. I think it's simple. Session object. What is the SQL? What are we using? SQLite. Oh, okay. SQLite, I mean. Sessions API. Object name. Session maker. Okay, we have a session. No, I mean, we can just see here. Session. Session maker. Yeah, we receive. How did they make the session here? db.createEngine. I mean, that's exactly what's happening here, right? So engine. Oh, no, they are making first the engine. Okay. And then they're making the session with the engine. Okay, I think that's. And then they return the session. Members. Okay, here's what we want. Members identity key. Close all. Begin call. Method. We just call the function. In it. No, we don't want in it. Close all. Close the session. Configure. Identity key. This might be useful. Return an identity key. What if there is no identity key? I think the user is the identity key in this case. The user ID. This is so complicated. Can you open again the PDF? So you have the identity ID. We can try to use that for the user. Okay, so you're saying here. It's name, right? So we say session.identity key. I think we might need to import it first. Do we already import them? From phone tools. I think we can just add another import, right? Import. Sql. Alchemy. That's definitely not the right one. Import. Import session. Is it big? Or lower case? What if we just... Go forward. SqlAlchemy. It's on the Python. But did they not give any example in the website? Here is the documentation of SqlAlchemy. Whatever. Install SqlAlchemy. How do I import? Okay, import Sql.