Timer 45 Minuten.
Start Recording.
Du kannst den zweiten Bildschirm eigentlich benutzen, nur nicht OBS zumachen, das wäre blöd.
Ja, ok.
Dann los.
Und immer schön reden.
Ok.
Gucke ich mir mal erst an, was ich überhaupt gemacht haben soll.
Test Package.
Ja, ich bin noch gerade am lesen, da denke ich nicht viel nach.
Immer laut reden.
Immer laut reden.
Ok.
Ok, bei Test Package können wir Test machen.
Ok, man kann direkt die Run Configuration benutzen.
Ok, folgende Features.
Der User kann direkt einen Account erstellen oder sich einen einloggen.
Wenn der User eingeloggt ist, kann man eine Liste der Einträge sehen, nur mit Namen und Beschreibung.
Rundliche Passwörter.
Einen bestimmten Eintrag, damit man das Passwort sehen kann.
Einen neuen Eintrag zukündigen.
Einen Eintrag ändern und einen Eintrag löschen.
Ok, fünf verschiedene Files.
Ok, die Database.
Ok, mit wem fangen wir an?
Ja. Das sind die Data Models.
Options.
Logic of Terminal.
Miniscreen.
Da muss ich noch genauer gucken.
Terminal.
State Machine.
Ok.
Actual Control Flow.
Ok.
Ok, es gibt den User.
Der Name.
Passwort.
Entry.
Das sind Entries.
Entries.
Wenn die Informationen über die Passwörter passen.
Also wie die Passwörter gespeichert werden in der Database.
Ok, also diese Entries kommen zu dem User dann entsprechend.
Ok, der Service Package ist installiert.
Ok, das ist gut.
Ok, Colorful Terminal Text.
Wahrscheinlich werden da irgendwelche To-Dos drin sein dafür.
Ok, dann gucke ich mir mal an, wie was gemacht werden muss.
Database Connection.
Ich suche mir jetzt die To-Dos.
Ich suche gerade die To-Dos und ich habe bisher noch keins gefunden.
Das bewirrt mich, weil ich dachte, dass da eigentlich schon welche wären.
To-Do.
Ok, das ist leicht.
Ok, gucken wir mal, was Copilot uns schon direkt sagt.
Also ich kann das ja hier machen.
Komplettationsverfahren.
Ok.
Ich gucke mir gerade die Lösungen an und ich verstehe sie nicht wirklich.
Weil I'll just ist mir jetzt nicht klar, was das genau bedeutet.
Das macht es ein bisschen schwierig jetzt genau zu verstehen, was da jetzt gemacht wird.
Ich denke, wenn man mehr Ahnung von den Funktionen dazu hätte, wäre es leichter.
Allerdings hat er jetzt auch keine anderen Beispiele dafür.
Ich gucke mir mal die I'll just Funktion an.
Ok, das verlängert das dann.
Das würde schon Sinn machen, dass das dann jetzt so ist.
Ok, das ist ein komischer Vorschlag.
Der macht gar keinen Sinn.
Ich probiere einfach mal das erste aus und würde dann einfach einen Test schreiben.
Ok, ich muss noch mal nachgucken, wie die Tester nochmal aufgerufen werden.
Test, Test, Test.
Pytest Package, TestDB, da können wir das machen.
Achso, das ist ja ein Database.
Was mache ich denn?
Habe ich hier Konsolen?
Habe ich hier nicht nur meine Konsolen?
Ok, ich weiß natürlich nicht genau, wo PET-String drin ist.
Das heißt, ich suche erstmal, wo das genau definiert ist.
Ich sehe jetzt nicht genau, wo das definiert ist, weil das ist ja jetzt nur Pytest Cache.
Gute Frage, das weiß ich jetzt nicht genau.
Ich probiere einfach mal das aus.
Ok, ich implementiere einfach mal weiter und gucke mir dann an, wo noch was gemacht wird.
Das muss ich mir dann später nochmal hinzugeben.
Ok, das heißt, wir können die Database sessionen.
Wir haben den Username und das Passwort mit dem Hash.
Ok, das heißt, wir müssen einfach überprüfen in der Session.
Da sind wir vielleicht schneller, wenn wir direkt das durchgucken.
Ok, er fügt es einfach hinzu, aber er überprüft gar nicht, ob dieser User bereits schon existiert und gibt nicht das Richtige zurück.
Das hier würde Sinn machen wahrscheinlich.
Ich müsste mir jetzt nochmal angucken, wie genau Add definiert ist.
In Session Add.
Ich weiß jetzt nicht, wo Add definiert ist.
In Session Add Database.
Gibt ein User hinzu.
Da wird ja wahrscheinlich schon etwas returnen.
Aber es macht ja Sinn, dass wir mal jetzt
Ich würde halt nicht gewissen, was hier
Session Database, Session Object.
Ich weiß nicht genau, wie das definiert ist.
Das macht mir Probleme.
Ich gucke mir nochmal in der Main an.
Jetzt genau gestartet mit Session.
Ok, Session ist Database.
Ist hier definiert.
Hier muss ich jetzt nochmal eine Add Methode finden.
Ok, Add Methode.
Returnt nichts.
Das heißt, wir wissen jetzt aber auch nicht genau, ob es schon drin war oder nicht.
Achso, wir müssen einfach überprüfen, ob der User schon drin war.
Gibt es etwas mit Exist oder Get?
Vielleicht Get.
Ich würde gerne Get benutzen, aber irgendwie hilft er mir nicht wirklich viel weiter.
Macht das Sinn, hier User Get zu haben?
Ich weiß einfach mal nicht, ob so ein User existiert.
Ansonsten wird der User hinzugefügt.
Und dann sollte er aber noch
Ok, das würde zumindest so machen, dass es jetzt so drin ist.
Ok, ToDo ist noch ein Login.
Jetzt müssen wir uns angucken, ob es einen User gibt mit diesem Name oder Password.
Und wir returnen das User Object.
Ok, wir returnen nur das User Object oder None, falls es es nicht gibt.
Das heißt, wir würden jetzt einfach nur
Ich will jetzt trotzdem mal sehen, was GitHub Copilot jetzt da für Vorschläge macht.
Ok, jetzt macht er hier queryUserFilter.
Ok, das könnte
Filter by Name
Das macht auch alles Sinn.
Ich denke
Ich denke, das ist korrekter als das, was ich oben habe mit Get.
Weil da habe ich eigentlich keine Ahnung.
Ich werde das mal einfach holen.
Wir müssen jetzt überprüfen, dass der Username gleich ist und das Passwort gleich ist.
Das ist jetzt wichtig.
Wenn wir erst passen, dann haben wir das dann.
Und dann return.
Ok, aber
Ja doch, dann müssen wir das returnen.
Ich weiß nicht, ob das geht.
Ich weiß nicht, ob wir sonst nämlich was anderes zurückgeben.
Ich weiß nicht, was genau SessionQuery da zurückgibt.
Ich könnte noch einmal kurz nachgucken.
Das ist ein bisschen schwierig jetzt direkt rauszulesen.
Ich werde mir einfach jetzt dem GitHub Copilot mal vertrauen.
Ich werde auch
Ich werde jetzt noch
Is a hash.
Ich werde das später nochmal zurückgeben.
Das heißt, ich werde mir den ToDo nochmal dahin machen, wenn ich mir das nochmal angucke.
Dann müssen wir einen User, der schon eingeloggt ist
Der hat einen EntryName, EntryInfo
PasswordFalse
Ok, das heißt, wir müssen jetzt zu der Session diese Entry hinzufügen.
Das macht Sinn.
Wir sollten aber erst noch überprüfen, ob das schon existiert.
Das heißt, wir können einfach oben dasselbe nochmal überprüfen.
SessionQuery
Ich gucke nochmal
Ja, ok, er macht schon
Ok, er macht jetzt sogar dasselbe wieder, was ich da vorher noch mit dem None gemacht habe.
Das macht irgendwie wenig Sinn, hier einen None dahinter zu machen.
Wir geben ja gerade nichts zurück.
Das heißt, wir überprüfen nochmal, ob das existiert.
Und dann return we are false, ja.
Und dann sonst return wir nochmal true.
Ich würde erstmal testen, ob ich jetzt
Ne, warte, ich habe jetzt noch keinen new User.
Also ich probiere erstmal erst einen neuen User zu machen, damit ich das mal sehen kann.
Ich würde jetzt einfach
Ich denke, das wird jetzt eben noch im Moment nicht richtig funktionieren, aber ich probiere es einfach trotzdem.
Wir machen den User A mit dem Passwort B.
Ok, ja.
Ja, Geld macht wenig Sinn.
Gut, dann probieren wir jetzt mal einfach das aus, was Github Copilot vorgeschlagen hat.
So, User A, Passwort B.
Ah, das hat schon mal geklappt.
Das Github Copilot hat das gut gefunden.
Da hätte ich nicht deutlich länger gebraucht dafür.
Ok, jetzt probieren wir noch gerade schnell, ob wir anders einloggen können jetzt.
Mit Name A, Passwort B.
Ja, das hat funktioniert.
Jetzt bringen wir mal eine Entry hinzu.
Wir probieren erstmal, ob es das jetzt schon gibt.
Also A und B nochmal.
Ah ne, Info B.
Info ist nur Test.
Passwort ist B.
Ok, das haben wir.
Jetzt
Hier, was ich überprüfe, ist hier nur Entry Name und User ID.
If there is already an Entry for that Name for the User.
Ok, das ist fair.
Machen wir nochmal eine Entry hinzu.
Name A, Info Test.
Passwort B, genau dasselbe.
Ok, das scheint auch zu funktionieren.
Er beschwert sich nämlich, dass es schon eine gibt.
Probieren wir jetzt mal eine neue zu machen.
Name B, Test B.
Ja, das geht, ok.
Delete Entry, ok.
Ähm, ok.
Da müssen wir jetzt gar nichts überprüfen.
Ob etwas existiert oder nicht.
Wir werden es einfach entfernen.
Wahrscheinlich ist jetzt wieder was.
Section Remove?
Ne, ok.
Dann fragen wir mal, geht das Copilot?
Delete, ok.
Der filtert das wieder raus und deletet das.
Das macht Sinn für mich jetzt.
Aber ich muss jetzt
Ich muss alles überprüfen, ich sei erfreut zurückzugeben.
Ah, ok, wenn ich jetzt hier direkt mache, ja, ok.
Nein, das war nicht das, was ich haben wollte.
Ok, turn false.
Ok, er überprüft, ob es existiert.
Ansonsten, das ist irgendwie, wenn er mal reingekommen ist, sollte nicht das sein.
So, ok, jetzt hier überprüfen, ob es existiert und ansonsten deleten wir es.
Das macht Sinn.
Ok, getEntryView, compose a string of all entries as a padded table.
Ah, ich weiß jetzt nicht genau, was das bedeutet.
Ah, ok, wir wollen, dass alle Entries, die es für einen User gibt, so dargestellt werden.
Ok, so ein padded table.
Ok, das sieht nach einer komplizierteren Funktion aus.
Dafür brauchen wir wahrscheinlich die eine Funktion da oben, die wir zuerst gemacht haben.
Oder wir brauchen ja das Padding mit den zwei Spaces.
Soll das denn wirklich so aussehen, mit den eckigen Klammern?
Ich werde mal einfach erstmal GitterCopilot fragen, was der da für tolle Vorschläge hat.
Ok, wir sollen einfach passen.
Das ist natürlich eine super Idee.
Wir haben nur CurrentUser.
Ich muss mal kurz nachgucken, wie CurrentUser aufgebaut ist.
Ah, hat Entries.
Ok, CurrentUser, Entries.
Soll das sortiert sein?
Ich sehe gerade nichts von sortiert.
Ich müsste erstmal ein Name
ich werde mir erstmal ein Name
Reduce LambdaXYmax von X User Entries.
Ich sollte aber nicht
da ist es aber falsch verstanden.
Weil wenn ich jetzt CurrentUser Entries
ich gucke da ganz durch.
Obwohl, das mag es auch so, ich starte nicht bei 0.
Weil ich habe ja ein Name, was schon 4 Buchstaben hat.
Das heißt, damit hätte ich mein Endname.
So, jetzt MNInfo.
Was schlägt der mir da vor?
Von den longest value in den Column.
Info.
Ok, da hat er jetzt auch schon 4 direkt.
SP2 Spaces.
SP2 Spaces.
Dann definieren wir einfach mal S.
Macht schon direkt.
Perfekt.
EI Entries.
Ok, dann Compose the following table.
Was legt er da schon schönes vor?
Format den String.
S, ja, dann Name.
Just.
Name.
Left.
Eigentlich macht er jetzt dann doch
Ich würde gerne Perfekt benutzen, wenn ich das ja schon definiert habe, aber
Ich müsste Front, Back.
Jetzt hätte ich Name.
Password.
Back, ok, das hat er ja.
Back wäre dann ja genau das.
Das macht Sinn, aber eigentlich fehlt er jetzt noch das Ding drunter.
Das heißt, er fehlt noch ein bisschen mehr beim Password.
Und dann jetzt nochmal
Hilfe mir, Co-Pilot.
Diese komplizierten String-Dinger sind jetzt nichts für mich, was ich jetzt finde, was so leicht zu machen ist.
Ok, das ist jetzt auch nur
Ja, ich muss ja für die ganzen Entries machen.
Da hat er jetzt ja nur das eine gemacht.
Das hier macht mir Sinn für Entry.
Ok, wir haben jetzt Result.
Wir haben dann erst oben das Name, Info, Password.
Ja, das macht Sinn.
Ok, danach
Ich gucke mir mal die Solution gleich an.
Entry, ok, Human Result, Entry Name.
Adjust.
Ok, dass jetzt dieses halt
Dass das jetzt der Front ist.
Es wird jetzt irgendwie
Ich brauche jetzt die andere Funktion gar nicht, aber
Eigentlich macht es jetzt auch keinen großen Unterschied.
Ich kann das jetzt einfach so mitholen.
Ich finde, was sind die 8er am Ende?
Eight Spaces at the Front.
Ok, ja.
Das macht Sinn.
Ok, das macht Sinn soweit.
Ok, ich will das jetzt mal nochmal testen.
So, was habe ich jetzt neu hinzugefügt?
Ich habe Delete Entry.
Ich weiß jetzt nicht, ob die alten noch gespeichert sind.
Ne, ok.
Die werden jetzt mal neu gemacht.
A, A, B.
Ups, ja.
A, B.
So, jetzt füge ich ein Entry hinzu.
A, B, C.
Jetzt will ich
Entry deleten.
Da will ich erstmal B.
Ne, B gibt es nicht.
Ok, probiere ich nochmal.
Jetzt mit A.
Ok.
Jetzt mal
Entry delete.
Ok.
Da habe ich dann fast weggemacht, was da falsch war.
Jetzt gucken wir mal an.
Entry delete.
Ok.
Ist das nicht genau dasselbe, was ich eben hatte?
Ah ne, ich habe da first delete, aber dann
Boah, das
Ne, ich finde, das macht wenig Sinn.
Ich müsste ja irgendwie
Ich müsste ja irgendwie bei der Query
Ne, bei der Session direkt, muss ich sagen.
Session nicht, sondern delete.
Delete, Entry, Name.
Ok, keine Ahnung, ob das existiert.
Das probieren wir mal grad.
Ist ein bisschen doof, dass ich jetzt mal wieder einen neuen User machen muss.
Äh, not a viable
Ups, hä?
Wieso ist das keine viable Option?
New Entry.
Delete Entry.
Ne.
Delete.
It's not persisted.
Ok.
Ich werde später nochmal drauf zurückgehen.
Das ist jetzt erstmal
Ich würde jetzt erstmal testen wollen, ob dieses Entryview ein
So funktioniert.
Das
GetEntryView ist wahrscheinlich ViewList.
Joa, das scheint zu funktionieren.
Ich schiebe mal noch einen hinzu.
B zu B.
Und
Ne, ok, das funktioniert nicht.
Eilig.
Ich hab jetzt nur
Ich hab jetzt nur
Wieso ist das jetzt in Entries nicht richtig drin?
Ich
Ne.
Entry Name, Entry Info.
Ich würd's mal printen, damit ich mal sehen kann, was genau passiert dabei.
A, B, C.
Äh, ne.
Kommen Fehler.
B.
B, B, C.
Hä?
Ok, jetzt ist's da?
Wieso hat das jetzt funktioniert und eben nicht?
Das macht jetzt erstmal keinen Sinn für mich.
Ich werd nur noch an Tutorial merken, dass ich das nochmal überprüfe.
GetEntry
Ok, das heißt
Wieder über den CurrentUser.
Wir gucken auf den CurrentUser in
Entries
SessionCurrent?
Ne, Session haben wir ja gar nicht.
Entries
So, GitHub CodeBinder zeigt mir mal, was man da machen kann.
Filter
Ja, das klingt gut.
Ich meine
Warum muss da kein None hinzufügen?
Oh, None.
Ich werd's mal jetzt einfach mal lassen.
UpdateEntry
Ok, dann müssen wir das einfach mal verändern.
Was können wir denn jetzt?
Ah, jetzt gibt's Session.
UpdateEntry in the Database.
Ok, wir müssen die Entry ändern.
EntryUpdate
EntryObjectUpdate
Ich weiß jetzt nicht genau, warum Session da jetzt noch dabei ist, weil ich dachte, die Entries sind eigentlich im User gespeichert.
Achso, wir müssen den User finden
Wir sind ja im User eingeloggt.
UpdateEntry
Wir haben jetzt SessionEntryNewName.
Session ist hier
Ich glaube, CurrentUser.
Da wäre ich am CurrentUser.
Ah, gut.
Rück.
Was liegt da vor?
EntryNameNameEntry
Das
Ja, ok.
Wir haben Entry in the Database.
Ok, wir werden jetzt
Funktioniert das so?
EntryNameName, EntryInfoInfo
Zeichnenkommit?
Ich weiß es nicht.
Ich würd's mal einfach probieren.
Mein GitHub-Codepalette ist zu sagen, wird's uns stimmen.
Ok, UserNummer
LogInmitterUser
LogInNullBit ist UpdateEntryNummer benutzt.
EditEntryCurrent
User von EntryName
EntryName
SuchEntryExists
Was ist das denn?
EditEntry
Also, gut.
Filter
InstrumentedList, ok.
Was ist hier bei GetEntry?
Ah, wir brauchen GetEntry.
Genau, wir wollen erst mal ein GetEntry bekommen.
Ok, das heißt
GetEntry
Es gibt schonmal kein Filterattribut.
Weil Entries
Ist jetzt
Wie genau definiert?
Ok, das
Ok, da muss ich irgendwie anders rangehen.
Ich mach einfach ein ForLoop.
ForEntry
CurrentUsers
UserEntries
EntryName
ReturningOutsideOfFunction
Ich bin sogar nicht sicher, was ich da
Wie soll ich das so anzeigen?
Ich glaub, das ist der Empfehler.
ReturningOutsideOfFunction
Ok, ich probier einfach zu starten.
Ok, ich probier einfach zu starten.
Dann ist hier ein Doppel.
Hä?
Ich bin für Abwärts.
Jesus
Wir haben keinen User da.
Hä?
Ich bin grad sicher.
Sehr verrührt.
Geben wir ein ForLoop rein.
Oh, war das nicht
Ok.
Ne, das war nicht
For
Entry
Ok, jetzt
Ist es ok?
Ich weiß nicht genau warum.
Ok, jetzt kann ich auch starten.
Hä?
War wahrscheinlich ein komisches Zeichen da.
Ich weiß nicht genau was.
So, jetzt
EntryName
Ok, jetzt funktioniert immerhin das Get schon mal.
Entry
Entry
Jetzt probieren wir nochmal hier
Edit
Ok, ne, er sagt
Er sagt, es gibt keine EntryNamed.
Aber ich hab so grad eben eine Entry
Hinzugefügt.
Das ist doch hier
NameColumns
ColumnString
Ne
Ich weiß nicht, ob ich
Wie ich das genau vergleichen kann.
Self
Notation
Ok.
Da
Name ist ein EntryName, das ist hier ein String dann.
Ich weiß noch mal kurz, was ein EntryName ist.
Name, Date und Stimmung.
Entschuldigung.
Ok, jetzt geht's.
Ich glaube, das braucht man schon eine Zeit lang, um richtig zu aktualisieren.
Dann muss ich, glaube ich, mehrmals neu starten.
Das ist jetzt schon das zweite Mal, wo das irgendwie passiert ist.
Ok, NewName machen wir
B
NewInfo
D
Ok, jetzt wle ich die ListView
BD, ok, das passt.
Das heißt, hat das aktualisiert.
Ok.
Machen wir weiter mit den ToDos.
Das scheint jetzt alles soweit zu funktionieren.
Hier oben, das kannst du erstmal weglassen, weil im Moment benutze ich das jetzt gar nicht.
Hier habe ich das ToDo noch vergessen.
EntryFromDatabase
Ok, 
So, das wollte ich nochmal überprüfen, ob dann wirklich das funktioniert.
Das heißt, ich gebe jetzt noch ein paar Kommentare hinzu.
Irgendwas.
So, jetzt will ich noch eine Liste sehen.
Ok, jetzt ist es schon wieder.
Wahrscheinlich muss ich hier noch
Ich muss
Nee, ist nur CurrentUser.
CurrentUser
GetEntry
Wie man das benutzt.
Okay, ich habe jetzt, ich habe neue hinzugefügt, neue Entries, das sagt ihr mir, aber wenn ich jetzt hier durch iteriere, sind die CurrentUserEntries trotzdem leer, woran liegt das?
Das heißt, wenn ich jetzt Sachen hinzufüge, muss ich hier noch vielleicht noch SessionCommit machen, das ist wahrscheinlich das Problem.
Ich denke, das ist das Problem, wenn ich irgendwas an Sessions ändere, dass ich dann nicht, dass ich das nicht festmache.
In den Entries muss ich hier nämlich auch noch SessionCommit machen.
Habe ich noch irgendwo, wo ich was mit Session mache, SessionCommit.
Wenn ich hier einen User ändere, muss ich auch Committen, weil alle Änderungen an der Database sollten ja gespeichert werden.
Ich logge eben, dass hier nichts, wo ich Committen muss.
Okay, probieren wir das jetzt mal noch, ob das jetzt soweit klappt.
Ach nee, er speichert doch den User.
Ah, das war wahrscheinlich das letzte Mal das Problem.
Muss ich doch gar nicht neu immer machen.
Aber nee, das passt jetzt nicht.
Ich habe kein Passwort eingegeben und bin einfach eingeloggt worden.
Das ist falsch.
Achso, ich habe noch die Funktion HashPassword, das war doch mit dem Log, wo hatte ich das mit dem Hash hier?
UserPassword is a Hash.
Und das heißt, wenn ich logge inner, muss ich gucken, ob UserPassword, ob Hash von UserPassword gleich dem Password ist.
Weil ich habe sie als Hash gespeichert in der Database.
Nee, warte.
Nee, das ist falsch rum.
Ich habe das als Hash gespeichert, wo ich das Passwort eingeben werde, damit ich sehen kann, ob es mit dem Hash übereinstimmt, der in der Database ist.
Kann ich die Session printen?
Session Paint, sorry.
Nein, das will ich nicht.
Doch, wenn ich das Ding auch printe.
Ich will einfach mal sehen, was das dann print ist.
Okay, nee, das hilft mir nicht viel.
Dann print.
Ich mache jetzt einfach eine Follow-up durch.
Okay, da schlägt der schon gleich was Schönes vor.
SessionUser, SessionCurrentUser, SessionUserName, Password.
Okay, das ist schön.
Das hilft mir nicht viel.
Das hätte ich nicht so schnell gefunden.
Okay, da, NamePassword, a, SessionUserName, Password.
Okay, wir haben a.
Jetzt will ich aber noch wissen, wie das Passwort als Hash aussehen würde.
Nee, das ist ein anderer Hash.
Okay, das heißt, dieses Ding funktioniert nicht.
Das heißt, ich werde jetzt einfach mal so durchgehen.
If userName, und das stimmt, dann return ich den SessionUser.
Ansonsten return ich none.
Das nehme ich weg.
Probieren wir mal.
Okay, das ist auch.
Ich weiß jetzt nicht, was das für ein Passwort ist.
Kann ich jetzt noch einen neuen User kreieren?
Nee, genau, jetzt existiert er schon.
Okay, ich weiß es nicht.